#-------------------------------------------------------------
function CLIC_coeff(params, s)
    if top_dof==true
        cug = params.CuG[1] * 1000^2 / 246^2 *100
        cuw = params.CuW[1] * 1000^2 / 246^2
        cub = params.CuB[1] * 1000^2 / 246^2
        cφu = params.Cφu[1] * 1000^2 / 246^2 *10
        cφqm = params.Cφqm[1] * 1000^2 / 246^2 *10
        ceu = params.Ceu[1] * 1000^2 / 246^2
        clu = params.Clu[1] * 1000^2 / 246^2
        cqe = params.Cqe[1] * 1000^2 / 246^2
        clqm = params.Clqm[1] * 1000^2 / 246^2

        #Running
        if scale == 172.5
            if s == 1400
                ctg = 0.984 * cug  + 0.0124 * cub   + 0.0395 * cuw
                ctw = 0.0165 * cug - 0.000222 * cub + 1.06 * cuw
                ctb = 0.0176 * cug + 1.09 * cub     - 0.000666 * cuw
                Cφu = -0.0233 * cφqm +  1.12 * cφu - 0.000739 * ceu
                Cφqm = 1.07 * cφqm - 0.00802 * cφu
                Clu = -0.000372 * cφu + 1.02 * clu + 0.000787 * ceu
                Ceu = -0.000739 * cφu + 0.00157 * clu + 1.01 * ceu - 0.014 * cqe
                Cqe = -0.0000180 * cφu - 0.007 * ceu + 1.012 * cqe
                Clqm = 1.0 * clqm
            elseif s == 3000
                ctg = 0.977 * cug  + 0.0192 * cub   + 0.0605 * cuw
                ctw = 0.0255 * cug - 0.000246 * cub + 1.10 * cuw
                ctb = 0.0268 * cug + 1.14 * cub     - 0.000733 * cuw
                Cφu = -0.0360 * cφqm + 1.17 * cφu -0.00121 * ceu
                Cφqm = 1.12 * cφqm - 0.0130 * cφu
                Clu = -0.000372 * cφu + 1.03 * clu + 0.00124 * ceu
                Ceu = -0.000739 * cφu + 0.00274 * clu + 1.014 * ceu -0.0212 * cqe
                Cqe = -0.0000180 * cφu -0.0106 * ceu + 1.017 * cqe
                Clqm = 1.0 * clqm
            else
                ctg =  cug
                ctw =  cuw
                ctb =  cub
                Cφu =  cφu
                Cφqm = cφqm
                Ceu = ceu
                Clu = clu
                Cqe = cqe
                Clqm = clqm
            end
        elseif scale == 1000
            if s == 1400
                ctg = 1.004 * cug  - 0.0029 * cub   - 0.00922 * cuw
                ctw = -0.0041 * cug + 0.00009 * cub + 0.985 * cuw
                ctb = -0.0038 * cug + 0.979 * cub     + 0.00028 * cuw
                Cφu = 0.003 * cφqm +  0.97 * cφu - 0.000739 * ceu
                Cφqm = 0.983 * cφqm + 0.001502 * cφu
                Clu = 0.0000992 * cφu + 0.995 * clu + 0.000787 * ceu
                Ceu = 0.0002 * cφu + 0.000156 * clu + 0.998 * ceu - 0.014 * cqe
                Cqe = -0.00000180 * cφu + 0.00157 * ceu + 1.012 * cqe
                Clqm = 1.0 * clqm
            elseif s == 3000
                ctg = 0.996 * cug  + 0.003 * cub   + 0.0104 * cuw
                ctw = 0.00439 * cug - 0.00009 * cub + 1.02 * cuw
                ctb = 0.00461 * cug + 1.02 * cub     - 0.00027 * cuw
                Cφu = -0.0057 * cφqm + 1.03 * cφu -0.00121 * ceu
                Cφqm = 1.02 * cφqm - 0.00180 * cφu
                Clu = -0.00012 * cφu + 1.006 * clu + 0.00124 * ceu
                Ceu = -0.00022 * cφu + 0.00045 * clu + 1.002 * ceu -0.0212 * cqe
                Cqe = -0.00000140 * cφu -0.0017 * ceu + 1.017 * cqe
                Clqm = 1.0 * clqm
            else
                ctg = 1.022 * cug  - 0.0142 * cub   - 0.046 * cuw
                ctw = -0.0205 * cug + 0.0006 * cub + 0.886 * cuw
                ctb = -0.0189 * cug + 0.89 * cub  + 0.00177 * cuw
                Cφu = 0.01360 * cφqm + 0.88 * cφu -0.00121 * ceu
                Cφqm = 0.916 * cφqm + 0.00675 * cφu
                Clu = 0.00049 * cφu + 0.97 * clu + 0.00124 * ceu
                Ceu = 0.000998 * cφu - 0.00187 * clu + 0.989 * ceu -0.0212 * cqe
                Cqe = -0.0000120 * cφu +0.008 * ceu + 1.017 * cqe
                Clqm = 1.0 * clqm
            end
        end
        θw = 28.13
        sw = sind(θw)
        cw = cosd(θw)
        ctz = cw*Ctw - sw*Ctb
    else
        cug = params.CuG[1] * 1000^2 / 246^2
        cuw = params.CuW[1] * 1000^2 / 246^2
        cub = params.CuB[1] * 1000^2 / 246^2
        cφu = params.Cφu[1] * 1000^2 / 246^2
        cφq1 = params.Cφq1[1] * 1000^2 / 246^2
        cφq3 = params.Cφq3[1] * 1000^2 / 246^2
        ceu = params.Ceu[1] * 1000^2 / 246^2
        clu = params.Clu[1] * 1000^2 / 246^2
        cqe = params.Cqe[1] * 1000^2 / 246^2
        clq1 = params.Clq1[1] * 1000^2 / 246^2
        clq3 = params.Clq3[1] * 1000^2 / 246^2

        #Running
        if scale == 172.5
            if s == 1400
                ctg = 0.984 * cug  + 0.0124 * cub   + 0.0395 * cuw
                ctw = 0.0165 * cug - 0.000222 * cub + 1.06 * cuw
                ctb = 0.0176 * cug + 1.09 * cub     - 0.000666 * cuw
                Cφu = -0.0168 * cφq1 +  1.12 * cφu - 0.000739 * ceu + 0.0009 * cφq3
                Cφq1 = 1.078 * cφq1 - 0.00802 * cφu - 0.07 * cφq3
                Cφq3 = 1.047 * cφq3 + 0.000154 * cφu + 0.0024 * clq3 -0.023 * cφq1
                Clu = -0.000372 * cφu + 1.02 * clu + 0.000787 * ceu  -0.014 * clq1
                Ceu = -0.000739 * cφu + 0.00157 * clu + 1.01 * ceu - 0.014 * cqe
                Cqe = -0.0000180 * cφu - 0.007 * ceu + 1.012 * cqe -0.0008 * cφq1
                Clq1 = 1.008 * clq1 + 0.033 * clq3
                Clq3 = 0.997 * clq3 + 0.011 * clq1 + 0.012 * cφq3
            elseif s == 3000
                ctg = 0.977 * cug  + 0.0192 * cub   + 0.0605 * cuw
                ctw = 0.0255 * cug - 0.000246 * cub + 1.10 * cuw
                ctb = 0.0268 * cug + 1.14 * cub     - 0.000733 * cuw
                Cφu = -0.02590 * cφq1 + 1.17 * cφu -0.00121 * ceu + 0.0021 * cφq3
                Cφq1 = 1.12 * cφq1 - 0.0126 * cφu - 0.11 * cφq3
                Cφq3 = 1.07 * cφq3 +0.00036 * cφu +  0.00365 * clq3 - 0.036 *cφq1
                Clu = -0.000372 * cφu + 1.03 * clu + 0.00124 * ceu - 0.0213 * clq1
                Ceu = -0.000739 * cφu + 0.00274 * clu + 1.014 * ceu -0.0212 * cqe
                Cqe = -0.0000180 * cφu -0.0106 * ceu + 1.017 * cqe - 0.0012 * cφq1
                Clq1 = 1.0117 * clq1 + 0.051 *clq3
                Clq3 = 0.991 * clq3 + 0.0170 * clq1 + 0.0018 * cφq3
            else
                ctg =  cug
                ctw =  cuw
                ctb =  cub
                Cφu =  cφu
                Cφq1 = cφq1
                Cφq3 = cφq3
                Ceu = ceu
                Clu = clu
                Cqe = cqe
                Clq1 = clq1
                Clq3 = clq3
            end
        elseif scale == 1000
            if s == 1400
                ctg = 1.004 * cug  - 0.0029 * cub   - 0.00922 * cuw
                ctw = -0.0041 * cug + 0.00009 * cub + 0.985 * cuw
                ctb = -0.0038 * cug + 0.979 * cub     + 0.00028 * cuw
                Cφu = 0.003 * cφq1 +  0.97 * cφu - 0.000739 * ceu - 0.0000447 *  cφq3
                Cφq1 = 0.983 * cφq1 + 0.001502 * cφu + 0.015 * cφq3 - 0.0006 * clq3
                Cφq3 = 0.990 * cφq3 + 0.005 * cφq1
                Clu = 0.0000992 * cφu + 0.995 * clu + 0.000787 * ceu + 0.0031 * clq1
                Ceu = 0.0002 * cφu + 0.000156 * clu + 0.998 * ceu - 0.014 * cqe
                Cqe = -0.00000180 * cφu + 0.00157 * ceu + 1.012 * cqe + 0.000195 * cφq1
                Clq1 = 0.998 * clq1 - 0.0083 * clq3 + 0.000097 *  cφq1 + 0.0016 * clu
                Clq3 = 1.002 * clq3 - 0.0028 * clq1 - 0.00031 *  cφq3
            elseif s == 3000
                ctg = 0.996 * cug  + 0.003 * cub   + 0.0104 * cuw
                ctw = 0.00439 * cug - 0.00009 * cub + 1.02 * cuw
                ctb = 0.00461 * cug + 1.02 * cub     - 0.00027 * cuw
                Cφu = -0.0036 * cφq1 + 1.03 * cφu -0.00121 * ceu + 0.000056 *  cφq3
                Cφq1 = 1.019 * cφq1 + 0.001502 * cφu - 0.0174 * cφq3
                Cφq3 = 1.011 * cφq3 + 0.001502 * cφu - 0.0057 * cφq1 + 0.00069 * clq3
                Clu = -0.00012 * cφu + 1.006 * clu + 0.00124 * ceu - 0.0035 * clq1
                Ceu = -0.00022 * cφu + 0.00045 * clu + 1.002 * ceu -0.0212 * cqe
                Cqe = -0.00000140 * cφu -0.0017 * ceu + 1.017 * cqe - 0.00023 *  cφq1
                Clq1 = 1.002 * clq1 + 0.009 * clq3 - 0.00013 *  cφq1 -0.00175 * clu
                Clq3 = 0.998 * clq3 + 0.003 * clq1 - 0.00035 *  cφq3
            else
                ctg = 1.022 * cug  - 0.0142 * cub   - 0.046 * cuw
                ctw = -0.0205 * cug + 0.0006 * cub + 0.886 * cuw
                ctb = -0.0189 * cug + 0.89 * cub  + 0.00177 * cuw
                Cφu = 0.01350 * cφq1 + 0.88 * cφu -0.00121 * ceu + 0.0011 *  cφq3
                Cφq1 = 0.915 * cφq1 + 0.006702 * cφu + 0.075 * cφq3
                Cφq3 = 0.947 * cφq3 + 0.000183 * cφu + 0.025 * cφq1 - 0.003 * clq3
                Clu = 0.00049 * cφu + 0.97 * clu + 0.00124 * ceu + 0.0016 * clq1
                Ceu = 0.000998 * cφu - 0.00187 * clu + 0.989 * ceu -0.0212 * cqe
                Cqe = -0.0000120 * cφu +0.008 * ceu + 1.017 * cqe + 0.00092 *  cφq1 - 0.00188 * clq1
                Clq1 = 0.992 * clq1 - 0.041 * clq3 + 0.00046 *  cφq1 - 0.000013 *  cφu  + 0.008 * clu
                Clq3 = 1.008 * clq3 - 0.014 * clq1 - 0.0016 *  cφq3
            end
        end
        Cφqm = Cφq1 - Cφq3
        Clqm = Clq1 - Clq3
        θw = 28.13
        sw = sind(θw)
        cw = cosd(θw)
        ctz = cw*ctw - sw*ctb
    end
    C = [ctw, ctz, Cφqm, 0, Cφu, Clqm, 0, Clu, Cqe, Ceu]
    return C
end

function compute_tt(C, p)
    cross_section = p[1]  + p[2] * C[1] + p[3] * C[2] + p[4] * C[3] + p[5] * C[4] + p[6] * C[5] + p[7] * C[6] + p[8] * C[7] + p[9] * C[8]+ p[10] * C[9] + p[11] * C[10] + p[12] * C[1] * C[1] + p[13] * C[1] * C[2]+ p[14] * C[1] * C[3] + p[15] * C[1] * C[4] + p[16] * C[1] * C[5]+ p[17] * C[1] * C[6] + p[18] * C[1] * C[7] + p[19] * C[1] * C[8]+ p[20] * C[1] * C[9] + p[21] * C[1] * C[10] + p[22] * C[2] * C[2]+ p[23] * C[2] * C[3] + p[24] * C[2] * C[4] + p[25] * C[2] * C[5]    + p[26] * C[2] * C[6] + p[27] * C[2] * C[7] + p[28] * C[2] * C[8]    + p[29] * C[2] * C[9] + p[30] * C[2] * C[10] + p[31] * C[3] * C[3]    + p[32] * C[3] * C[4] + p[33] * C[3] * C[5] + p[34] * C[3] * C[6]    + p[35] * C[3] * C[7] + p[36] * C[3] * C[8] + p[37] * C[3] * C[9]    + p[38] * C[3] * C[10] + p[39] * C[4] * C[4] + p[40] * C[4] * C[5]    + p[41] * C[4] * C[6] + p[42] * C[4] * C[7] + p[43] * C[4] * C[8]    + p[44] * C[4] * C[9] + p[45] * C[4] * C[10] + p[46] * C[5] * C[5]    + p[47] * C[5] * C[6] + p[48] * C[5] * C[7] + p[49] * C[5] * C[8]    + p[50] * C[5] * C[9] + p[51] * C[5] * C[10] + p[52] * C[6] * C[6]    + p[53] * C[6] * C[7] + p[54] * C[6] * C[8] + p[55] * C[6] * C[9]    + p[56] * C[6] * C[10] + p[57] * C[7] * C[7] + p[58] * C[7] * C[8]    + p[59] * C[7] * C[9] + p[60] * C[7] * C[10] + p[61] * C[8] * C[8]    + p[62] * C[8] * C[9] + p[63] * C[8] * C[10] + p[64] * C[9] * C[9]+ p[65] * C[9] * C[10] + p[66] * C[10] * C[10]

    return cross_section
end

function compute_AFB_CLIC(C, p1, p2)
    n_sm = (p1[1])
    n_lin = (p1[2] * C[1] + p1[3] * C[2] + p1[4] * C[3]+ p1[5] * C[4] + p1[6] * C[5] + p1[7] * C[6] + p1[8] * C[7] + p1[9] * C[8]+ p1[10] * C[9] + p1[11] * C[10])
    n_quad = (p1[12] * C[1] * C[1] + p1[13] * C[1] * C[2]     + p1[14] * C[1] * C[3] + p1[15] * C[1] * C[4] + p1[16] * C[1] * C[5]      + p1[17] * C[1] * C[6] + p1[18] * C[1] * C[7] + p1[19] * C[1] * C[8]      + p1[20] * C[1] * C[9] + p1[21] * C[1] * C[10] + p1[22] * C[2] * C[2]      + p1[23] * C[2] * C[3] + p1[24] * C[2] * C[4] + p1[25] * C[2] * C[5]+ p1[26] * C[2] * C[6] + p1[27] * C[2] * C[7] + p1[28] * C[2] * C[8]      + p1[29] * C[2] * C[9] + p1[30] * C[2] * C[10] + p1[31] * C[3] * C[3]      + p1[32] * C[3] * C[4] + p1[33] * C[3] * C[5] + p1[34] * C[3] * C[6]      + p1[35] * C[3] * C[7] + p1[36] * C[3] * C[8] + p1[37] * C[3] * C[9] + p1[38] * C[3] * C[10] + p1[39] * C[4] * C[4] + p1[40] * C[4] * C[5]      + p1[41] * C[4] * C[6] + p1[42] * C[4] * C[7] + p1[43] * C[4] * C[8]      + p1[44] * C[4] * C[9] + p1[45] * C[4] * C[10] + p1[46] * C[5] * C[5]      + p1[47] * C[5] * C[6] + p1[48] * C[5] * C[7] + p1[49] * C[5] * C[8]+ p1[50] * C[5] * C[9] + p1[51] * C[5] * C[10] + p1[52] * C[6] * C[6]      + p1[53] * C[6] * C[7] + p1[54] * C[6] * C[8] + p1[55] * C[6] * C[9]      + p1[56] * C[6] * C[10] + p1[57] * C[7] * C[7] + p1[58] * C[7] * C[8]      + p1[59] * C[7] * C[9] + p1[60] * C[7] * C[10] + p1[61] * C[8] * C[8]+ p1[62] * C[8] * C[9] + p1[63] * C[8] * C[10] + p1[64] * C[9] * C[9]      + p1[65] * C[9] * C[10] + p1[66] * C[10] * C[10])

    d_sm = p2[1]
    d_lin = (p2[2] * C[1] + p2[3] * C[2] + p2[4] * C[3]+ p2[5] * C[4] + p2[6] * C[5] + p2[7] * C[6] + p2[8] * C[7] + p2[9] * C[8]+ p2[10] * C[9] + p2[11] * C[10])
    d_quad = (p2[12] * C[1] * C[1] + p2[13] * C[1] * C[2]     + p2[14] * C[1] * C[3] + p2[15] * C[1] * C[4] + p2[16] * C[1] * C[5]      + p2[17] * C[1] * C[6] + p2[18] * C[1] * C[7] + p2[19] * C[1] * C[8]      + p2[20] * C[1] * C[9] + p2[21] * C[1] * C[10] + p2[22] * C[2] * C[2]      + p2[23] * C[2] * C[3] + p2[24] * C[2] * C[4] + p2[25] * C[2] * C[5]+ p2[26] * C[2] * C[6] + p2[27] * C[2] * C[7] + p2[28] * C[2] * C[8]      + p2[29] * C[2] * C[9] + p2[30] * C[2] * C[10] + p2[31] * C[3] * C[3]      + p2[32] * C[3] * C[4] + p2[33] * C[3] * C[5] + p2[34] * C[3] * C[6]      + p2[35] * C[3] * C[7] + p2[36] * C[3] * C[8] + p2[37] * C[3] * C[9] + p2[38] * C[3] * C[10] + p2[39] * C[4] * C[4] + p2[40] * C[4] * C[5]      + p2[41] * C[4] * C[6] + p2[42] * C[4] * C[7] + p2[43] * C[4] * C[8]      + p2[44] * C[4] * C[9] + p2[45] * C[4] * C[10] + p2[46] * C[5] * C[5]      + p2[47] * C[5] * C[6] + p2[48] * C[5] * C[7] + p2[49] * C[5] * C[8]+ p2[50] * C[5] * C[9] + p2[51] * C[5] * C[10] + p2[52] * C[6] * C[6]      + p2[53] * C[6] * C[7] + p2[54] * C[6] * C[8] + p2[55] * C[6] * C[9]      + p2[56] * C[6] * C[10] + p2[57] * C[7] * C[7] + p2[58] * C[7] * C[8]      + p2[59] * C[7] * C[9] + p2[60] * C[7] * C[10] + p2[61] * C[8] * C[8]+ p2[62] * C[8] * C[9] + p2[63] * C[8] * C[10] + p2[64] * C[9] * C[9]      + p2[65] * C[9] * C[10] + p2[66] * C[10] * C[10])
    AFB = ( n_sm / d_sm + (n_lin * d_sm - n_sm * d_lin) / d_sm^2 + ( -n_sm * d_sm * d_quad + n_sm * d_lin^2 - n_lin * d_sm * d_lin + d_sm^2 * n_quad ) / d_sm^3 )
    #AFB = ( n_sm + n_lin + n_quad ) / ( d_sm + d_lin + d_quad )
    return AFB
end


#----------- CS parameters --------------------------------------------------
function params_CS_380_m()
    return [ 1.093,
    1.648157, -0.979181, -0.0435623, 0., -0.0376958, -1.41669, 0.,
    -1.255929, -0.0895433, -0.1060861,
    0.9006120000000002, -1.1069839000000001, -0.06669400000000009,
    -0.05224599999999979, -0.05629300000000009, -1.4023808,
    -0.02273100000000028, -1.405218, -0.1805199999999998, -0.17029500000000014,
    0.3667859, 0.016728599999999975, 0.000767500000000032,
    0.017787599999999903, 0.7611202999999999, -0.0018320000000001668,
    0.7610151000000002, 0.17458810000000002, 0.17761010000000005,
    0.0023602999999999333, 0.0012330000000000396, -0.0006599999999999939,
    0.04248540000000012, -0.0028050000000000574, 0.032567000000000124,
    -0.007717999999999892, -0.0026079999999999437, -0.0012330000000000396,
    -0.003047000000000022, 0.0008588000000000484, -0.001971000000000056,
    0.001967000000000052, 0.0023700000000000943, 0.0026599999999999957,
    0.0020808000000000493, 0.032699299999999876, 5.999999999983796e-05,
    0.04223600000000005, -0.00526800000000005, -0.0031240000000000157,
    0.6767898, -0.001009600000000055, 1.0495692000000005,
    -0.0012590999999999575, 0.00030660000000010124, 0.0006550000000000722,
    -0.00028600000000000847, -0.0036560000000001036, -0.00015799999999999148,
    0.681285, -0.00031999999999998696, 0.00040800000000001946,
    0.07647729999999997, 0.115394, 0.0753491
    ]
end

function params_CS_380_p()
    return [ 0.577,
    1.183622, -1.2587760000000001, 0.0179233, 0.0, 0.0223828, -0.157903,
    0.0, -0.139468, -0.8097850000000001, -0.957434, 0.8822760000000003,
    -1.9495910000000003, 0.039311000000000235, -0.008280999999999872,
    0.025206000000000027, -0.15719700000000028, -0.0032800000000000606,
    -0.15415900000000052, -1.3862130000000004, -1.3806470000000002,
    1.0953080000000002, -0.04503400000000021, -0.0018330000000000846,
    -0.04430700000000002, 0.08432399999999993, -0.00027300000000007874,
    0.08331599999999992, 1.596936, 1.6006950000000002, 0.0015306999999999717,
    -0.002792999999999879, -0.0004789999999999517, 0.004035000000000066,
    -0.0026800000000000157, 0.0034680000000000266, -0.03846799999999995,
    -0.03106579999999992, 0.0011489999999999556, -0.0017879999999999563,
    -0.003431999999999935, -0.002803999999999973, -0.00027599999999994296,
    -0.00011999999999989797, -0.0009109999999999951, 0.0015961999999999713,
    0.005247000000000057, 0.0018220000000000458, 0.004055000000000031,
    -0.02946599999999988, -0.04034850000000001, 0.07524999999999996,
    -2.6999999999943736e-05, 0.11630300000000005, 0.0007530000000000037,
    -0.00019889999999989083, 5.8000000000002494e-05, 0.00033400000000000096,
    0.0037040000000000406, -0.0005290000000000017, 0.07558000000000001,
    0.0021520000000000428, -0.00016680000000002249, 0.6816300000000001,
    1.0484630000000001, 0.685335
    ]
end

function params_CS_1400_m()
    return [ 0.118,
    0.27381079999999997, -0.167138, -0.0069814, 0.0, -0.00237758, -3.14105,
    0.0, -1.2781200000000001, -0.074449, -0.256203, 0.8597662000000001,
    -1.0781120000000002, -0.009238000000000149, -0.002187000000000189,
    -0.007075999999999995, -3.1406969999999994, -0.001643000000000061,
    -3.167876999999997, -0.34862300000000035, -0.34680100000000014,
    0.36329300000000003, 0.00302200000000001, -0.00035900000000002597,
    0.0033149999999999335, 1.8408450000000016, -4.4000000000044004e-05,
    1.7790450000000035, 0.40257499999999924, 0.4046050000000001,
    0.00011340000000000048, -0.00010299999999999199, 0.00020499999999998297,
    0.15676800000000313, 0.00014799999999999536, -0.03133199999999903,
    -0.00835200000000036, 0.0039279999999997095, 8.400000000000074e-05,
    -3.200000000000425e-05, 0.04891600000000196, -2.7000000000013125e-05,
    -0.04778400000000005, 0.006655999999999551, -0.003714000000000439,
    9.558000000000743e-05, -0.0070179999999986364, 0.00025999999999998247,
    0.14088200000000128, 0.0044919999999999405, -0.011947999999999848,
    26.05325, 0.08388100000000032, 2.352800000000002, 0.0850600000000008,
    0.028610000000001357, -0.00018099999999998673, -0.03861899999999707,
    -0.0008189999999999031, 0.003941000000000194, 26.11732,
    -0.07633999999999608, -0.019390000000000462, 2.893489, 0.27247000000000066,
    2.898893
    ]
end

function params_CS_1400_p()
    return [ 0.0688,
    0.1995894, -0.21234499999999998, 0.000536651, 0.0, 0.0042718,
    -0.34894000000000003, 0.0, -0.141964, -0.6691, -2.30461,
    0.8575255999999998, -1.8622279999999996, 0.00647200000000009,
    0.00013600000000017765, 0.007210000000000044, -0.34759599999999935,
    0.00019400000000027728, -0.35225599999999924, -3.1589750000000016,
    -3.162905000000002, 1.0368449999999998, -0.006614999999999981,
    0.000934000000000032, -0.005998999999999872, 0.19742000000000015,
    0.0021260000000001, 0.20347000000000026, 3.657899999999998,
    3.5990999999999964, 0.0002183490000000057, -0.0002610000000000112,
    -0.0001769999999999966, 0.014145000000000074, -0.00015500000000001624,
    -0.002414999999999612, -0.16535500000000525, 0.011744999999997674,
    0.00015600000000000336, -0.00032699999999999396, 0.0011940000000003614,
    -0.00016800000000001536, -0.0041560000000000485, -0.0019560000000033995,
    -0.0244560000000007, 0.00034719999999999803, 0.0004609999999996006,
    -0.0001880000000000076, 0.009560999999999709, -0.022119000000003552,
    -0.0989190000000022, 2.89783, 0.00300599999999987, 0.2716499999999993,
    -0.0409900000000043, -0.07269000000000148, 9.400000000001074e-05,
    0.005025999999999975, -0.002194000000002916, -0.043194000000003285,
    2.901034, 0.030829999999998137, -0.0181699999999978, 26.091410000000003,
    2.4420899999999968, 26.099520000000002
    ]
end

function params_CS_3000_m()
    return [ 0.0259,
    0.06118565, -0.0373601, -0.00155288, 0.0, -0.00048628, -3.2109, 0.0,
    -1.20875, -0.06798799999999999, -0.263374,
    0.80722305, -1.0126507, -0.0031294000000000152, -0.002228699999999969,
    -0.00497590000000017, -3.3900086999999957, -0.0011606999999999278,
    -3.3984087000000045, -0.34138869999999777, -0.3806287000000026,
    0.34081110000000003, 0.0007235999999999246, 0.0003169000000000123,
    0.0016101999999999805, 1.7205490000000196, 0.0008415999999999736,
    1.6125490000000156, 0.4525490000000012, 0.4003490000000003,
    -7.199999999987598e-07, 3.5300000000001996e-05, 6.199999999999956e-05,
    -0.028446399999992877, 2.590000000000231e-05, -0.27244639999999265,
    -0.0016464000000002699, -0.012346400000001978, -1.900000000002594e-06,
    2.1000000000007124e-05, -0.24199809999998934, 2.4300000000004873e-05,
    -0.27999810000000025, 0.003001900000001001, -0.021998099999999354,
    1.6079999999999534e-05, -0.07552979999996978, 2.139999999999781e-05,
    0.08247020000001726, 0.01297019999999982, -0.015329799999999949,
    124.36902999999998, -0.1529913999999916, 2.105870000000081,
    -0.13922999999994445, 0.005770000000037356, -8.600000000000968e-06,
    0.27700860000001626, 0.007408599999999765, -0.017391400000001056,
    124.32187999999998, 0.13277000000006112, -0.5662299999999512, 13.799218,
    0.29936999999999614, 13.813604000000002
    ]
end

function params_CS_3000_p()
    return [ 0.0151,
    0.04458185, -0.0474009, 8.8719e-05, 0.0, 0.0009568, -0.35691999999999996,
    0.0, -0.134827, -0.61138, -2.36727,
    0.80448375, -1.7471356, 0.0031652999999999413, 0.003910600000000016,
    0.001737299999999861, -0.34579559999999887, 0.0002855999999998738,
    -0.3826356000000004, -3.3798656000000022, -3.042565600000003, 0.9721809,
    -0.001560999999999909, 0.00042869999999997806, -0.0016878000000000977,
    0.20951999999999948, 7.00999999998387e-05, 0.14442000000000021,
    3.6672200000000146, 3.6902200000000107, 2.228099999999825e-05,
    6.700000000003578e-06, 2.0900000000004343e-05, 0.03668899999999908,
    -3.999999999976245e-07, -0.0187109999999997, -0.24111100000000363,
    0.0018889999999913698, -8.700000000002109e-06, 1.7900000000002983e-05,
    0.019008700000000545, 1.7000000000003124e-05, -0.034691300000000425,
    -0.21299130000001298, -0.08499129999999866, 9.999999999982896e-07,
    0.012342199999999082, 3.0100000000001653e-05, -0.022757800000000827,
    -0.11395780000000855, -0.3759577999999948, 13.79643, 0.0260100999999998,
    0.22499000000000002, 0.10448999999999842, -0.0725100000000225,
    -1.0100000000000733e-05, 0.007610100000000841, -0.18398990000001447,
    -0.14898990000001788, 13.837437, -0.09260999999999342,
    -0.020610000000019113, 124.30879, 2.092589999999973, 124.29968000000001,
    ]
end

#----------- AFB parameters --------------------------------------------------

function params_FB_380_m()
    return [ -0.24155,
    -0.1901973178, 0.12494349559999998, 0.013539162840000002, 0.0,
    -0.00359617932, 0.44200728, 0.0, -0.1464413214, -0.0090438733,
    0.036833093920000004,
    0.026290935599999954, -0.011116162139999969, -0.052205900599999966,
    -0.024344317000000032, -0.04697818539999998, 0.2593862098,
    0.03534301140000007, -0.3142520506, -0.047890408800000034,
    0.01286223000000003, -0.01167676526, -0.025640308639999998,
    -0.01711768193999999, 0.004266949660000019, -0.17212289374,
    -0.016517271879999962, 0.15669649286000004, 0.01634664446000003,
    -0.04900191574000001, 0.02327970396000001, -0.024008077200000005,
    -0.0174220484, -0.04018494896000002, -0.03212171320000001,
    -0.019085448800000043, -0.04860923480000001, -0.019870315,
    0.018686691200000022, -0.01947854320000003, -0.017950437360000016,
    -0.029858633200000012, -0.01824070600000005, -0.038156945000000025,
    -0.030569138200000012, 0.0021173693200000065, -0.005157985240000051,
    -0.022569613999999988, 0.01473882919999997, -0.0016861115999999843,
    -0.021088069000000015, -0.2545991316, -0.021740183600000018,
    -0.0053503422000000245, -0.01796913270000003, -0.015589285240000028,
    0.02086358399999999, -0.0170530478, -0.024714666599999963, -0.033461243,
    0.2712805702, -0.015301320000000007, -0.0074075658000000155, 0.0492505785,
    -0.011688229799999977, -0.015601826920000006
    ]
end

function params_FB_380_p()
    return [ -0.155,
    -0.14392843519999998, 0.1764803952, 0.0005054370599999999, 0.0,
    -0.006741699360000001, 0.050055250999999995, 0.0, -0.0158714584,
    -0.07466217700000001, 0.3339529792,
    -0.006046289600000032, 0.00029614080000003873, -0.04666642900000001,
    -0.017150509800000047, 0.009492783000000019, 0.03533155820000003,
    -0.004848297199999976, -0.006418093599999966, -0.31227749019999995,
    0.2913092062, -0.0009627784000000028, -0.019141527200000008,
    -0.005969887400000012, 0.013486567599999999, -0.022356518800000003,
    -0.010875803600000011, 0.003020070400000005, 0.34048053319999994,
    -0.3595030122, 0.010795659740000019, -0.010768485800000033,
    0.0018172239999999784, -0.0068203050000000265, -0.0090912836,
    -0.014379492400000027, -0.025362784199999988, -0.009359213480000017,
    0.00799124900000002, 0.006745063399999987, -0.0070957924000000505,
    -0.013221304200000006, -0.014334178800000041, -0.008858030399999994,
    -0.008867234600000051, -0.007535793039999988, 0.0002899510000000105,
    -0.012661968999999995, 0.008217071999999992, 0.0035080873999999984,
    0.018733228300000015, -0.02539493959999997, -0.011189580600000026,
    -0.005842211400000019, -0.0057774564000000195, -0.00482771328000009,
    0.01165748200000001, -0.018443375600000006, -0.014680141199999996,
    -0.011899143400000034, 0.04120990720000001, -0.011135613599999983,
    -0.01254848423999999, 0.28308673, -0.028280601000000016, -0.2735278998
    ]
end

function params_FB_1400_m()
    return [ -0.0642,
    -0.06166219216, 0.039678561200000004, 0.00478365528, 0.0,
    -0.0010694354839999999, 2.30678712, 0.0, -0.845604192,
    -0.0462030494, 0.1834925886,
    0.0026209123599999842, -0.002376997199999953, -0.01722610999999999,
    0.021990412200000017, -0.0037679012000000067, 1.342538431799999,
    5.622580000003152e-05, -1.3488658001999974, -0.12348732699999981,
    0.1668576182000004, -0.0035838962000000196, -0.0032322340000000005,
    0.004732783800000022, -0.0006274145999999869, -0.9971230649999954,
    0.005205922600000024, 1.1066272550000043, 0.249701384999999,
    -0.2038040930000004, 0.0012163607199999968, -0.0001884278000000017,
    -0.003203343199999986, -0.21889557599999993, -0.0005434046000000053,
    -0.10898649599999505, 0.05931812800000019, 0.028634506000000448,
    -0.0008817768000000115, -0.000143284399999985, -0.04922262320000076,
    0.0006250520000000218, -0.1987559831999967, 0.03903758080000014,
    0.011247048800000103, -0.0001888853160000037, 0.10020312080000121,
    -0.0027162323999999904, 0.14388412080000063, -0.0077775911999994896,
    0.02703712080000026, -19.28293128, 0.034748197600000544, 0.6056191600000047,
    0.01566748800000234, -0.1432370079999989, 0.0003703423999999872,
    0.09052429760000319, 0.024730249600000198, -0.00919602040000006,
    19.357468831999995, -0.05417959199999295, -0.1349736079999983,
    2.1338739614, 0.11280915999999991, -2.1403598206
    ]
end

function params_FB_1400_p()
    return [ -0.0423,
    -0.05580519624, 0.061070422, 7.64191024e-05, 0.0, -0.00268012732,
    0.25458662400000004, 0.0, -0.0940369536, -0.41899042000000003, 1.676373314,
    0.0037223982400000077, -0.016383634600000002, -0.012079497599999996,
    -0.0172110938, 0.003285108799999985, 0.2639953893999997,
    -0.00018614740000000296, -0.1566451761999999, -1.8274912780000052,
    1.544818180000002, 0.01239598799999999, 0.003957556000000015,
    -0.01401908159999999, -0.003013664799999989, -0.061634498000000364,
    0.006384375200000021, 0.09507889600000013, 1.6441627099999911,
    -2.2349725699999983, 0.0012343948975999872, 0.000938986400000015,
    -0.0005224229999999941, -0.019194322000000423, -0.0001492619999999764,
    0.012180082000000154, -0.42351109400000714, -0.12027207399999701,
    -0.0005580164000000068, 0.0003278528000000003, 0.02885554239999983,
    -0.0008816619999999845, -0.007384951600000016, -0.36779254360000896,
    -0.25816518359999724, -0.00022286188000000123, 0.03476405320000015,
    -0.0022240425999999897, 0.0005702052000004579, -0.20379081080000266,
    0.010100489200004677, -2.15215078, -0.018317040800000066,
    -0.019962267999999832, -0.2987170440000087, 0.1333824759999997,
    0.0008361567999999875, 0.029998659199999618, -0.47644805680000407,
    -0.21224269679999513, 2.1585804736, -0.06372376000001073,
    0.09600893999999921, 19.565680676000007, 0.13044470399999336, -19.091902818
    ]
end

function params_FB_3000_m()
    return [ -0.0144,
    -0.01506390703, 0.00824163806, 0.001107514016, 0.0, -0.000244987864,
    2.37413946, 0.0, -0.8744097500000001, -0.049141726399999995, 0.2002169148,
    -0.00888847559, 0.011918027420000001, 0.02402207956, 0.008909928480000003,
    0.017448310900000003, 3.5910372626199925, 0.012048924739999998,
    -1.8490864173799928, 0.03264593862000072, 0.42913688262000244,
    0.0007378443399999983, -0.006546996639999997, -0.00213803328,
    0.0045523664000000005, 0.6790073175999972, 0.0038500381999999993,
    0.7707393176000189, 0.31049647759999993, -0.11483726239999752,
    -4.941817600000176e-05, 0.00016126760000000073, 0.0007053499600000023,
    0.3123831041600205, 0.00035717403999999814, -1.2166184958399946,
    0.20837688415999872, 0.039271044160000226, 9.557607999999967e-05,
    0.00038107451999999827, -0.7121553760800047, -0.0003770667200000029,
    -1.2447347760799936, 0.28005044392000117, 0.07885868392000257,
    -0.0006351993359999999, 1.3420551871999897, 0.0003397036399999994,
    -0.7254570127999919, 0.20010436719999874, 0.308401927200001,
    -93.95014957, 1.447012246599992, 2.1552861100000067, 0.9176769699999817,
    1.5793946100000003, -4.4846599999998765e-05, -0.13516335339997382,
    0.15965280659999942, 0.1514703866000005, 94.39950823999999,
    -0.8077450299999845, -2.2016347899999795, 10.2069911564,
    0.7152398900000002, -10.435316124800002
    ]
end

function params_FB_3000_p()
    return [ -0.00945,
    -0.012179761419999999, 0.014476234860000001, 1.2101271599999999e-05, 0.0,
    -0.00063646336, 0.26626231999999994, 0.0, -0.098558537,
    -0.43664759599999997, 1.739469996,
    -0.0013887635400000008, -0.0027948370400000012, 0.0116891528,
    0.014143326679999997, 0.0014378006200000005, 0.1849023709600011,
    -0.008357148980000001, -0.2289249930400001, -1.3396925150399839,
    1.93425702496002, 0.0030070611399999995, -0.0011093526000000003,
    0.004736182719999997, 0.022774307719999998, 0.06243712400000014,
    -0.008886208120000004, -0.1961172160000015, 1.9683887040000072,
    -2.821002296000002, 0.0005220293284000001, -0.00020898668000000203,
    -0.0001347709600000007, -0.028421170600000135, -0.000320051620000001,
    -0.0090270105999992, 0.6841214694000128, -0.270311130599977,
    0.00015433728000000153, -0.0002537273600000025, 0.09323226272000042,
    -0.0001275652000000023, -0.059058977280001625, -0.8505189372799848,
    0.038764262720009345, -0.00017994635999999883, 0.11733122971999911,
    -0.00013461487999999987, 0.02552644971999698, 0.8559386097200004,
    -1.1545081902799823, -10.452374586, 0.06920977788000114,
    0.21033202599999748, 0.24243386600002872, 0.8013628660000349,
    5.608212000000022e-05, 0.15388087787999852, -0.11250408211998185,
    0.3544853178800209, 10.412323891000002, 0.7374538460000095,
    1.1992574460000198, 92.66097710999999, 1.0052292860000178, -92.531801482
    ]
end




#-------- cross sections --------------------------------------------
function CS_380_m(params)
    C = CLIC_coeff(params, 380)
    p = params_CS_380_m()
    return compute_tt(C, p)
end

function CS_380_p(params)
    C = CLIC_coeff(params, 380)
    p = params_CS_380_p()
    return compute_tt(C, p)
end

function CS_1400_m(params)
    C = CLIC_coeff(params, 1400)
    p = params_CS_1400_m()
    return compute_tt(C, p)
end

function CS_1400_p(params)
    C = CLIC_coeff(params, 1400)
    p = params_CS_1400_p()
    return compute_tt(C, p)
end

function CS_3000_m(params)
    C = CLIC_coeff(params, 3000)
    p = params_CS_3000_m()
    return compute_tt(C, p)
end

function CS_3000_p(params)
    C = CLIC_coeff(params, 3000)
    p = params_CS_3000_p()
    return compute_tt(C, p)
end

#-------- AFB --------------------------------------------

function AFB_380_m(params)
    C = CLIC_coeff(params, 380)
    p1 = params_FB_380_m()
    p2 = params_CS_380_m()
    return compute_AFB_CLIC(C, p1, p2)
end

function AFB_380_p(params)
    C = CLIC_coeff(params, 380)
    p1 = params_FB_380_p()
    p2 = params_CS_380_p()
    return compute_AFB_CLIC(C, p1, p2)
end

function AFB_1400_m(params)
    C = CLIC_coeff(params, 1400)
    p1 = params_FB_1400_m()
    p2 = params_CS_1400_m()
    return compute_AFB_CLIC(C, p1, p2)
end

function AFB_1400_p(params)
    C = CLIC_coeff(params, 1400)
    p1 = params_FB_1400_p()
    p2 = params_CS_1400_p()
    return compute_AFB_CLIC(C, p1, p2)
end

function AFB_3000_m(params)
    C = CLIC_coeff(params, 3000)
    p1 = params_FB_3000_m()
    p2 = params_CS_3000_m()
    return compute_AFB_CLIC(C, p1, p2)
end

function AFB_3000_p(params)
    C = CLIC_coeff(params, 3000)
    p1 = params_FB_3000_p()
    p2 = params_CS_3000_p()
    return compute_AFB_CLIC(C, p1, p2)
end
